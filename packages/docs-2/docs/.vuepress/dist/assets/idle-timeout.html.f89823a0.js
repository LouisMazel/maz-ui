var C=Object.defineProperty;var T=Object.getOwnPropertySymbols;var M=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable;var k=(t,n,s)=>n in t?C(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s,m=(t,n)=>{for(var s in n||(n={}))M.call(n,s)&&k(t,s,n[s]);if(T)for(var s of T(n))z.call(n,s)&&k(t,s,n[s]);return t};var a=(t,n,s)=>(k(t,typeof n!="symbol"?n+"":n,s),s);import{_ as D,e as O,j as I,x as B,o as w,c as q,b as u,a as o,w as i,u as l,A as c,y as H,F as N,i as x,t as _,h as E,d as r}from"./app.d6fe649e.js";import"./index.a2d3089f.js";class R{constructor(n,s){a(this,"defaultOptions",{element:document.body,timeout:60*1e3*5,once:!1,immediate:!1});a(this,"callback");a(this,"options");a(this,"timeoutHandler");a(this,"isIdle",!1);a(this,"isDestoy",!1);a(this,"startTime",0);a(this,"remainingTime",0);a(this,"lastClientX",-1);a(this,"lastClientY",-1);a(this,"eventNames",["DOMMouseScroll","mousedown","mousemove","mousewheel","MSPointerDown","MSPointerMove","keydown","touchmove","touchstart","wheel","click"]);a(this,"handleEvent",n=>{try{if(this.remainingTime>0)return;if(n.type==="mousemove"){const{clientX:s,clientY:e}=n;if(s===void 0&&e===void 0||s===this.lastClientX&&e===this.lastClientY)return;this.lastClientX=s,this.lastClientY=e}this.resetTimeout(),this.callback({isIdle:this.isIdle,eventType:n.type})}catch(s){throw new Error(`[IdleTimeout](handleEvent) ${s}`)}});this.callback=n,this.options=m(m({},this.defaultOptions),s);const e=this.options.element;for(const p of this.eventNames)e.addEventListener(p,this.handleEvent);this.resetTimeout(),this.options.immediate&&this.callback({isIdle:!1})}pause(){const n=this.startTime+this.options.timeout-new Date().getTime();n<=0||(this.remainingTime=n,this.timeoutHandler&&(clearTimeout(this.timeoutHandler),this.timeoutHandler=void 0))}resume(){this.remainingTime<=0||(this.resetTimeout(),this.callback({isIdle:this.isIdle}),this.remainingTime=0)}reset(){this.isDestoy=!1,this.isIdle=!1,this.remainingTime=0,this.resetTimeout(),this.callback({isIdle:this.isIdle})}destroy(){this.isDestoy=!0;const n=this.options.element;for(const s of this.eventNames)n.removeEventListener(s,this.handleEvent);this.timeoutHandler&&clearTimeout(this.timeoutHandler)}resetTimeout(){this.isIdle=!1,this.timeoutHandler&&(clearTimeout(this.timeoutHandler),this.timeoutHandler=void 0),this.timeoutHandler=setTimeout(this.handleTimeout.bind(this),this.remainingTime||this.options.timeout),this.startTime=new Date().getTime()}handleTimeout(){this.isIdle=!0,this.callback({isIdle:this.isIdle}),this.options.once&&this.destroy()}get destroyed(){return this.isDestoy}get timeout(){return this.options.timeout}set timeout(n){this.options.timeout=n}get idle(){return this.isIdle}set idle(n){n?this.handleTimeout():this.reset(),this.callback({isIdle:this.isIdle})}}const P=x(`<h1 id="idle-timeout" tabindex="-1"><a class="header-anchor" href="#idle-timeout" aria-hidden="true">#</a> idle-timeout</h1><p>Helper to see and manage the user activity</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h2><br><p><strong>options</strong>: <code>IdleTimeoutOptions</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> options<span class="token operator">:</span> IdleTimeoutOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  element<span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
  immediate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  once<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>callback</strong>: <code>IdleTimeoutCallback</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> idleTimeoutCallback<span class="token operator">:</span> <span class="token function-variable function">IdleTimeoutCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> isIdle<span class="token punctuation">,</span> eventType <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isIdle<span class="token punctuation">,</span> eventType <span class="token punctuation">}</span><span class="token punctuation">)</span>

  event<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
    isIdle<span class="token punctuation">,</span>
    eventType<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,9),S={class:"flex items-start gap-05 items-center flex-wrap"},V=r(" Pause "),X=r(" Resume "),Y=r(" Reset "),j=r(" Destroy "),A=u("br",null,null,-1),F={style:{display:"flex"}},L={style:{flex:"1"}},W={key:0,style:{flex:"1","padding-left":"10px"}},$=x(`<p><strong>Wait 3 seconds without any actions to see the idle change to true</strong></p><h2 id="how-to-use-it" tabindex="-1"><a class="header-anchor" href="#how-to-use-it" aria-hidden="true">#</a> How to use it ?</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MazBtn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idleTimeoutInstance?.pause<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Pause
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MazBtn</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MazBtn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idleTimeoutInstance?.resume<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Resume
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MazBtn</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MazBtn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idleTimeoutInstance?.reset<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Reset
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MazBtn</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MazBtn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idleTimeoutInstance?.destroy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Destroy
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MazBtn</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MazCard</span> <span class="token attr-name">overflow-hidden</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        isIdle: {{event.isIdle}}
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>event.eventType<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        eventType: {{event.eventType}}
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MazCard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">import</span> MazBtn <span class="token keyword">from</span> <span class="token string">&#39;maz-ui/components/MazBtn&#39;</span>
  <span class="token keyword">import</span> MazCard <span class="token keyword">from</span> <span class="token string">&#39;maz-ui/components/MazCard&#39;</span>

  <span class="token keyword">import</span> <span class="token punctuation">{</span> IdleTimeout <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;maz-ui/package/helpers&#39;</span>
  <span class="token comment">// for typescript users</span>
  <span class="token keyword">import</span> type <span class="token punctuation">{</span> IdleTimeoutOptions<span class="token punctuation">,</span> IdleTimeoutCallback <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;maz-ui&#39;</span>

  <span class="token keyword">const</span> event <span class="token operator">=</span> ref<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token literal-property property">isIdle</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span> eventType<span class="token operator">?</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token literal-property property">idleTimeoutCallback</span><span class="token operator">:</span> <span class="token function-variable function">IdleTimeoutCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isIdle<span class="token punctuation">,</span> eventType <span class="token punctuation">}</span><span class="token punctuation">)</span>

    event<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
      isIdle<span class="token punctuation">,</span>
      eventType<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> idleTimeoutInstance <span class="token operator">=</span> ref<span class="token operator">&lt;</span>IdleTimeout<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">idleTimeoutOptions</span><span class="token operator">:</span> IdleTimeoutOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">element</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">,</span>
      <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
      <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">once</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    idleTimeoutInstance<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IdleTimeout</span><span class="token punctuation">(</span>idleTimeoutCallback<span class="token punctuation">,</span> idleTimeoutOptions<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="default-options" tabindex="-1"><a class="header-anchor" href="#default-options" aria-hidden="true">#</a> Default Options</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> defaultOptions<span class="token operator">:</span> IdleTimeoutStrictOption <span class="token operator">=</span> <span class="token punctuation">{</span>
  element<span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 5 minutes</span>
  once<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  immediate<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h3><h4 id="pause" tabindex="-1"><a class="header-anchor" href="#pause" aria-hidden="true">#</a> Pause</h4><p>Pause the instance</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>idleTimeoutInstance<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="resume" tabindex="-1"><a class="header-anchor" href="#resume" aria-hidden="true">#</a> Resume</h4><p>Resume the instance</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>idleTimeoutInstance<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="reset" tabindex="-1"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> Reset</h4><p>Reset the timeout of the instance</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>idleTimeoutInstance<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> Destroy</h4><p>Will destroy the instance</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>idleTimeoutInstance<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,19),G=O({setup(t){const n=I({}),s=({isIdle:p,eventType:d})=>{console.log({isIdle:p,eventType:d}),n.value={isIdle:p,eventType:d}},e=I();return B(()=>{const p={element:document.body,timeout:3e3,immediate:!0,once:!1};e.value=new R(s,p)}),(p,d)=>{var v,h,b,g;return w(),q(N,null,[P,u("div",S,[o(l(c),{onClick:(v=e.value)==null?void 0:v.pause,color:"warning"},{default:i(()=>[V]),_:1},8,["onClick"]),o(l(c),{onClick:(h=e.value)==null?void 0:h.resume},{default:i(()=>[X]),_:1},8,["onClick"]),o(l(c),{onClick:(b=e.value)==null?void 0:b.reset,color:"secondary"},{default:i(()=>[Y]),_:1},8,["onClick"]),o(l(c),{onClick:(g=e.value)==null?void 0:g.destroy,color:"danger"},{default:i(()=>[j]),_:1},8,["onClick"])]),A,o(l(H),{"overflow-hidden":"",style:{width:"100%"}},{default:i(()=>{var y,f;return[u("div",F,[u("div",L,"isIdle: "+_((y=n.value.isIdle)!=null?y:!1),1),n.value.eventType?(w(),q("div",W,"eventType: "+_((f=n.value.eventType)!=null?f:"-"),1)):E("",!0)])]}),_:1}),$],64)}}});var U=D(G,[["__file","idle-timeout.html.vue"]]);export{U as default};
