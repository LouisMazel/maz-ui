import{_ as c,e as i,o as u,c as r,b as n,q as a,u as t,T as p,F as k,d as e,i as o}from"./app.d6fe649e.js";const d=n("h1",{id:"vlazyimg",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vlazyimg","aria-hidden":"true"},"#"),e(" vLazyImg")],-1),v=n("p",null,[n("code",null,"vLazyImg"),e(" is a Vue 3 directive to lazy load image with many options, the image will be loaded on user scroll")],-1),m=n("h2",{id:"basic-usage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-usage","aria-hidden":"true"},"#"),e(" Basic usage")],-1),g={style:{"background-color":"var(--maz-color-bg-lighter)",width:"80%"},class:"flex flex-center rounded"},b=o(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--maz-color-bg-lighter<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex flex-center rounded<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-lazy-img</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>https://pbs.twimg.com/profile_images/598181608198381570/-cFG43y2_400x400.jpg<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> vLazyImg <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;maz-ui&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> hasClikedOutside <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">clikedOutside</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    hasClikedOutside<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> hasClikedOutside<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="use-background-image" tabindex="-1"><a class="header-anchor" href="#use-background-image" aria-hidden="true">#</a> Use background image</h2><blockquote><p>Instead of <code>v-lazy-img</code> use <code>v-lazy-img:bg-image</code></p></blockquote>`,3),y={style:{height:"200px",width:"100%","background-size":"contain"},class:"flex flex-center rounded"},h=o(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex flex-center rounded<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">v-lazy-img:</span>bg-image</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>https://pbs.twimg.com/profile_images/598181608198381570/-cFG43y2_400x400.jpg<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><blockquote><p>Open the developer console to show logs</p></blockquote>`,3),f={style:{"background-color":"var(--maz-color-bg-lighter)",width:"80%"},class:"flex flex-center rounded"},z=o(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--maz-color-bg-lighter<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex flex-center rounded<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-lazy-img</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lazyBinding<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> vLazyImg<span class="token punctuation">,</span> vLazyImgBinding <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;maz-ui&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> <span class="token literal-property property">lazyBinding</span><span class="token operator">:</span> vLazyImgBinding <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">&#39;https://cdn.artphotolimited.com/images/5ff5a529bd40b83c5a537440/1000x1000/gerard-depardieu-1983.jpg&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">baseClass</span><span class="token operator">:</span> <span class="token string">&#39;custom-class&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">loadingClass</span><span class="token operator">:</span> <span class="token string">&#39;custom-class-loading&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">loadedClass</span><span class="token operator">:</span> <span class="token string">&#39;custom-class-loaded&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">errorClass</span><span class="token operator">:</span> <span class="token string">&#39;custom-class-error&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">noPhotoClass</span><span class="token operator">:</span> <span class="token string">&#39;custom-class-no-photo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">noUseErrorPhoto</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">observerOnce</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// launch onIntersecting function each times where the user scrolls on the image</span>
    <span class="token literal-property property">loadOnce</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onLoading</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> Element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;loading&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onLoaded</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> Element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;loaded&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onError</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> Element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onIntersecting</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> Element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;intersecting&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="global-install" tabindex="-1"><a class="header-anchor" href="#global-install" aria-hidden="true">#</a> Global install</h2><p><code>main.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> vLazyImgInstall<span class="token punctuation">,</span> vLazyImgOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;maz-ui&#39;</span>
<span class="token keyword">import</span> errorPhoto <span class="token keyword">from</span> <span class="token string">&#39;path/to/error-photo.png&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

<span class="token comment">// all options (optional)</span>
<span class="token keyword">const</span> vLazyImgOptions<span class="token operator">:</span> vLazyImgOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  baseClass<span class="token operator">:</span> <span class="token string">&#39;m-lazy-img&#39;</span><span class="token punctuation">,</span>
  loadedClass<span class="token operator">:</span> <span class="token string">&#39;m-lazy-loaded&#39;</span><span class="token punctuation">,</span>
  loadingClass<span class="token operator">:</span> <span class="token string">&#39;m-lazy-loading&#39;</span><span class="token punctuation">,</span>
  errorClass<span class="token operator">:</span> <span class="token string">&#39;m-lazy-error&#39;</span><span class="token punctuation">,</span>
  noPhotoClass<span class="token operator">:</span> <span class="token string">&#39;m-lazy-no-photo&#39;</span><span class="token punctuation">,</span>
  noPhoto<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  observerOnce<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  loadOnce<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  noUseErrorPhoto<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  observerOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    root<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    rootMargin<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    threshold<span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  errorPhoto<span class="token punctuation">,</span>
  <span class="token function-variable function">onLoading</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;loading&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onLoaded</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;loaded&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onError</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onIntersecting</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;intersecting&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vLazyImgInstall<span class="token punctuation">,</span> vLazyImgOptions<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),q=i({setup(_){const l={src:"https://cdn.artphotolimited.com/images/5ff5a529bd40b83c5a537440/1000x1000/gerard-depardieu-1983.jpg",baseClass:"custom-class",loadingClass:"custom-class-loading",loadedClass:"custom-class-loaded",errorClass:"custom-class-error",noPhotoClass:"custom-class-no-photo",noUseErrorPhoto:!0,observerOnce:!1,loadOnce:!0,onLoading:s=>console.log("loading",s),onLoaded:s=>console.log("loaded",s),onError:s=>console.log("error",s),onIntersecting:s=>console.log("intersecting",s)};return(s,w)=>(u(),r(k,null,[d,v,m,n("p",null,[a(n("img",g,null,512),[[t(p),"https://pbs.twimg.com/profile_images/598181608198381570/-cFG43y2_400x400.jpg"]])]),b,a(n("div",y,null,512),[[t(p),"https://pbs.twimg.com/profile_images/598181608198381570/-cFG43y2_400x400.jpg","bg-image"]]),h,n("p",null,[a(n("img",f,null,512),[[t(p),l]])]),z],64))}});var I=c(q,[["__file","lazy-img.html.vue"]]);export{I as default};
