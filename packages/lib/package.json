{
  "name": "maz-ui",
  "type": "module",
  "version": "4.0.0-alpha.5",
  "description": "A standalone components library for Vue.Js 3 & Nuxt.Js 3",
  "author": "Louis Mazel <me@loicmazuel.com>",
  "license": "MIT",
  "homepage": "https://maz-ui.com/",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LouisMazel/maz-ui.git"
  },
  "bugs": {
    "url": "https://github.com/LouisMazel/maz-ui/issues"
  },
  "keywords": [
    "vue",
    "nuxt",
    "components",
    "vue-component",
    "framework",
    "library",
    "ui",
    "nuxt",
    "nuxt3",
    "module",
    "nuxt-module"
  ],
  "sideEffects": [
    "*.css",
    "*.vue",
    "**/plugins/**",
    "**/directives/**"
  ],
  "exports": {
    ".": {
      "types": "./dist/types/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    },
    "./components": {
      "types": "./dist/types/components/index.d.ts",
      "import": "./dist/components/index.mjs",
      "require": "./dist/components/index.cjs"
    },
    "./composables": {
      "types": "./dist/types/composables/index.d.ts",
      "import": "./dist/composables/index.mjs",
      "require": "./dist/composables/index.cjs"
    },
    "./helpers": {
      "types": "./dist/types/helpers/index.d.ts",
      "import": "./dist/helpers/index.mjs",
      "require": "./dist/helpers/index.cjs"
    },
    "./plugins": {
      "types": "./dist/types/plugins/index.d.ts",
      "import": "./dist/plugins/index.mjs",
      "require": "./dist/plugins/index.cjs"
    },
    "./directives": {
      "types": "./dist/types/directives/index.d.ts",
      "import": "./dist/directives/index.mjs",
      "require": "./dist/directives/index.cjs"
    },
    "./formatters": {
      "types": "./dist/types/formatters/index.d.ts",
      "import": "./dist/formatters/index.mjs",
      "require": "./dist/formatters/index.cjs"
    },
    "./resolvers": {
      "types": "./dist/types/resolvers/index.d.ts",
      "import": "./dist/resolvers/index.mjs",
      "require": "./dist/resolvers/index.cjs"
    },
    "./nuxt": {
      "types": "./dist/nuxt/types.d.ts",
      "import": "./dist/nuxt/module.mjs",
      "require": "./dist/nuxt/module.cjs"
    },
    "./components/*": {
      "types": "./dist/types/components/*.vue.d.ts",
      "import": "./dist/components/*.mjs",
      "require": "./dist/components/*.cjs"
    },
    "./composables/*": {
      "types": "./dist/types/composables/*.d.ts",
      "import": "./dist/composables/*.mjs",
      "require": "./dist/composables/*.cjs"
    },
    "./helpers/*": {
      "types": "./dist/types/helpers/*.d.ts",
      "import": "./dist/helpers/*.mjs",
      "require": "./dist/helpers/*.cjs"
    },
    "./plugins/*": {
      "types": "./dist/types/plugins/*.d.ts",
      "import": "./dist/plugins/*.mjs",
      "require": "./dist/plugins/*.cjs"
    },
    "./directives/*": {
      "types": "./dist/types/directives/*.d.ts",
      "import": "./dist/directives/*.mjs",
      "require": "./dist/directives/*.cjs"
    },
    "./formatters/*": {
      "types": "./dist/types/formatters/*.d.ts",
      "import": "./dist/formatters/*.mjs",
      "require": "./dist/formatters/*.cjs"
    },
    "./resolvers/*": {
      "types": "./dist/types/resolvers/*.d.ts",
      "import": "./dist/resolvers/*.mjs",
      "require": "./dist/resolvers/*.cjs"
    },
    "./styles": "./dist/css/main.css",
    "./aos-styles": "./dist/css/aos.css",
    "./package.json": "./package.json",
    "./*": "./*"
  },
  "main": "./dist/index.cjs",
  "module": "./dist/index.mjs",
  "types": "./dist/types/index.d.ts",
  "bin": {
    "maz": "./bin/maz.mjs",
    "maz-ui": "./bin/maz.mjs"
  },
  "files": [
    "bin",
    "dist",
    "icons",
    "tailwindcss"
  ],
  "engines": {
    "node": ">= 6.0.0",
    "npm": ">= 3.0.0"
  },
  "scripts": {
    "maz": "maz",
    "lint": "pnpm lint:js && pnpm lint:style",
    "lint:nofix": "cross-env NODE_ENV=production eslint",
    "lint:js": "pnpm lint:nofix --fix",
    "lint:oxlint": "oxlint . --fix -D correctness --ignore-path .gitignore",
    "lint:style": "stylelint --fix \"./**/*.{vue,css,scss,postcss,pcss,html}\"",
    "build": "pnpm typecheck && pnpm build:only",
    "build:only": "vite build",
    "build:analyze": "node --loader ts-node/esm build/analyze-bundle.ts",
    "get-icon-list": "node --loader ts-node/esm build/getIconList.ts",
    "replace-svg-values": "node --loader ts-node/esm build/replaceValuesInSvg.ts",
    "test:unit": "vitest",
    "test:unit:watch": "vitest watch",
    "test:unit:coverage": "vitest run --coverage",
    "test:unit:coverage:watch": "vitest watch --coverage",
    "test:unit:coverage:master": "vitest run --coverage --changed master",
    "pre-commit": "lint-staged",
    "gen:declaration-files": "vue-tsc --declaration --emitDeclarationOnly -p tsconfig.types.json",
    "typecheck": "vue-tsc --noEmit --skipLibCheck"
  },
  "peerDependencies": {
    "@nuxt/kit": "^3.4.0",
    "chart.js": "^4.0.0",
    "dayjs": "^1.1.0",
    "defu": "^6.0.0",
    "dropzone": "^5.9.3",
    "libphonenumber-js": "^1.9.44",
    "nuxt": "^3.4.0",
    "unplugin-auto-import": ">=19.0.0 <20.0.0",
    "unplugin-vue-components": ">=28.0.0 <29.0.0",
    "valibot": ">=0.30.0 <2.0.0",
    "vue": "^3.5.0",
    "vue-router": "^4.0.0"
  },
  "peerDependenciesMeta": {
    "@nuxt/kit": {
      "optional": true
    },
    "chart.js": {
      "optional": true
    },
    "dayjs": {
      "optional": true
    },
    "defu": {
      "optional": true
    },
    "dropzone": {
      "optional": true
    },
    "libphonenumber-js": {
      "optional": true
    },
    "nuxt": {
      "optional": true
    },
    "unplugin-auto-import": {
      "optional": true
    },
    "unplugin-vue-components": {
      "optional": true
    },
    "valibot": {
      "optional": true
    },
    "vue-router": {
      "optional": true
    }
  },
  "dependencies": {
    "@mazui/cli": "workspace:*"
  },
  "devDependencies": {
    "@babel/core": "catalog:",
    "@babel/preset-env": "catalog:",
    "@babel/preset-typescript": "catalog:",
    "@eslint/markdown": "catalog:",
    "@nuxt/kit": "catalog:",
    "@nuxt/schema": "catalog:",
    "@types/dropzone": "catalog:",
    "@types/google.maps": "catalog:",
    "@vitejs/plugin-vue": "catalog:",
    "@vitest/coverage-v8": "catalog:",
    "@vue/compiler-sfc": "catalog:",
    "@vue/test-utils": "catalog:",
    "@vue/tsconfig": "catalog:",
    "autoprefixer": "catalog:",
    "c8": "catalog:",
    "chalk": "catalog:",
    "chart.js": "catalog:",
    "dayjs": "catalog:",
    "defu": "catalog:",
    "dropzone": "catalog:",
    "eslint-plugin-vuejs-accessibility": "catalog:",
    "fs": "catalog:",
    "glob": "catalog:",
    "jsdom": "catalog:",
    "json-templater": "catalog:",
    "libphonenumber-js": "catalog:",
    "minimist": "catalog:",
    "nuxt": "catalog:",
    "onchange": "catalog:",
    "path": "catalog:",
    "postcss": "catalog:",
    "postcss-html": "catalog:",
    "postcss-import": "catalog:",
    "postcss-nested": "catalog:",
    "postcss-replace": "catalog:",
    "postcss-simple-vars": "catalog:",
    "postcss-url": "catalog:",
    "replace-in-file": "catalog:",
    "rimraf": "catalog:",
    "sass": "catalog:",
    "semver": "catalog:",
    "sirv": "catalog:",
    "stylelint": "catalog:",
    "stylelint-config-recommended-vue": "catalog:",
    "stylelint-config-standard": "catalog:",
    "stylelint-config-standard-scss": "catalog:",
    "stylelint-config-tailwindcss": "catalog:",
    "stylelint-scss": "catalog:",
    "tailwindcss": "catalog:",
    "typescript": "catalog:",
    "unplugin-auto-import": "catalog:",
    "unplugin-vue-components": "catalog:",
    "valibot": "catalog:",
    "vite": "catalog:",
    "vite-plugin-css-injected-by-js": "catalog:",
    "vite-plugin-dts": "catalog:",
    "vite-plugin-lib-inject-css": "catalog:",
    "vite-plugin-static-copy": "catalog:",
    "vite-svg-loader": "catalog:",
    "vitest": "catalog:",
    "vitest-canvas-mock": "catalog:",
    "vue": "catalog:",
    "vue-chartjs": "catalog:",
    "vue-loader": "catalog:",
    "vue-router": "catalog:",
    "vue-tsc": "catalog:"
  },
  "lint-staged": {
    "*.{js,ts,vue,mjs,mts,cjs}": "cross-env NODE_ENV=production eslint --fix",
    "*.{vue,css,scss,postcss,pcss}": "stylelint --fix --allow-empty-input"
  }
}
