/* eslint-disable no-console */
import { writeFileSync } from 'node:fs'
import { componentsList } from './get-component-list'
import render from 'json-templater/string'
import { resolve } from 'node:path'
import { EOL } from 'node:os'
import { logger } from './logger'

const COMPONENTS_OUTPUT_PATH = resolve(__dirname, './../package/components/index.ts')

const COMPONENTS_IMPORT_TEMPLATE = "export { default as {{name}} } from '{{path}}'"
const COMPONENTS_TEMPLATE = `/* Automatically generated by './build/generate-components-entry.js' */

{{include}}
`

const buildEntry = (template: string, importTemplate: string, outputPath: string) => {
  try {
    const includeComponentTemplate: string[] = []

    for (const component of componentsList) {
      includeComponentTemplate.push(
        render(importTemplate, {
          name: component.name,
          path: component.relativePath,
        }),
      )
    }

    const file = render(template, {
      include: includeComponentTemplate.join(EOL),
    })

    writeFileSync(outputPath, file)

    logger.success('[GenPackageComponentsEntry] âœ…')
  } catch (error) {
    logger.error(
      '[GenPackageComponentsEntry] ðŸ”´ Error occurred while generating package components entry file',
      error,
    )
  }
}

buildEntry(COMPONENTS_TEMPLATE, COMPONENTS_IMPORT_TEMPLATE, COMPONENTS_OUTPUT_PATH)
