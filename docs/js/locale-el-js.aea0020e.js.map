{"version":3,"sources":["webpack:///./node_modules/moment/locale/el.js"],"names":["global","factory","this","moment","isFunction","input","Function","Object","prototype","toString","call","el","defineLocale","monthsNominativeEl","split","monthsGenitiveEl","months","momentToFormat","format","test","substring","indexOf","_monthsGenitiveEl","month","_monthsNominativeEl","monthsShort","weekdays","weekdaysShort","weekdaysMin","meridiem","hours","minutes","isLower","isPM","toLowerCase","meridiemParse","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendarEl","sameDay","nextDay","nextWeek","lastDay","lastWeek","day","sameElse","calendar","key","mom","output","_calendarEl","apply","replace","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"oGAEE,SAAUA,EAAQC,GAEsBA,EAAQ,EAAQ,UAFzD,CAKCC,GAAM,SAAWC,GAAU,aAEzB,SAASC,EAAWC,GAChB,OAAOA,aAAiBC,UAAsD,sBAA1CC,OAAOC,UAAUC,SAASC,KAAKL,GAIvE,IAAIM,EAAKR,EAAOS,aAAa,KAAM,CAC/BC,mBAAqB,qHAAqHC,MAAM,KAChJC,iBAAmB,qHAAqHD,MAAM,KAC9IE,OAAS,SAAUC,EAAgBC,GAC/B,OAAKD,EAEwB,kBAAXC,GAAuB,IAAIC,KAAKD,EAAOE,UAAU,EAAGF,EAAOG,QAAQ,UAC1EnB,KAAKoB,kBAAkBL,EAAeM,SAEtCrB,KAAKsB,oBAAoBP,EAAeM,SAJxCrB,KAAKsB,qBAOpBC,YAAc,oDAAoDX,MAAM,KACxEY,SAAW,yDAAyDZ,MAAM,KAC1Ea,cAAgB,8BAA8Bb,MAAM,KACpDc,YAAc,uBAAuBd,MAAM,KAC3Ce,SAAW,SAAUC,EAAOC,EAASC,GACjC,OAAIF,EAAQ,GACDE,EAAU,KAAO,KAEjBA,EAAU,KAAO,MAGhCC,KAAO,SAAU5B,GACb,MAA0C,OAAjCA,EAAQ,IAAI6B,cAAc,IAEvCC,cAAgB,gBAChBC,eAAiB,CACbC,GAAK,SACLC,IAAM,YACNC,EAAI,aACJC,GAAK,cACLC,IAAM,qBACNC,KAAO,4BAEXC,WAAa,CACTC,QAAU,iBACVC,QAAU,gBACVC,SAAW,eACXC,QAAU,eACVC,SAAW,WACP,OAAQ9C,KAAK+C,OACT,KAAK,EACD,MAAO,gCACX,QACI,MAAO,mCAGnBC,SAAW,KAEfC,SAAW,SAAUC,EAAKC,GACtB,IAAIC,EAASpD,KAAKqD,YAAYH,GAC1BtB,EAAQuB,GAAOA,EAAIvB,QAIvB,OAHI1B,EAAWkD,KACXA,EAASA,EAAOE,MAAMH,IAEnBC,EAAOG,QAAQ,KAAO3B,EAAQ,KAAO,EAAI,MAAQ,SAE5D4B,aAAe,CACXC,OAAS,QACTC,KAAO,UACPC,EAAI,oBACJC,GAAK,kBACLC,EAAI,YACJC,GAAK,WACLC,EAAI,UACJC,GAAK,UACLC,EAAI,WACJC,GAAK,WACLC,EAAI,aACJC,GAAK,WACLC,EAAI,cACJC,GAAK,aAETC,uBAAwB,WACxBC,QAAS,MACTC,KAAO,CACHC,IAAM,EACNC,IAAM,KAId,OAAOlE","file":"js/locale-el-js.aea0020e.js","sourcesContent":["//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n\n    var el = moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            ss : '%d δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n\n    return el;\n\n})));\n"],"sourceRoot":""}