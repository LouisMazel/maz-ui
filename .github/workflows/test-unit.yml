name: Unit Tests

on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/test-unit.yml
      - 'packages/**/*'
      - '!packages/*/CHANGELOG.md'
      - '!packages/*/package.json'
  pull_request:
    branches-ignore:
      - dependabot/**
    paths:
      - .github/workflows/test-unit.yml
      - 'packages/**'
      - pnpm-lock.yaml

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for OIDC if you use it
      pull-requests: write

    env:
      TEST_ENV: 'true'
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: Europe/Paris
          timezoneMacos: Europe/Paris

      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js, pnpm and Nx cache
        uses: ./.github/actions/setup

      - name: Build packages
        run: pnpm build:packages

      - name: Test units
        run: pnpm test:unit:coverage:all

      - name: Find coverage files
        id: find_cov
        run: |
          echo "Looking for coverage files:"
          find packages -type f -path '*/coverage/lcov.info' -print || true
          # export a newline-separated list for later steps
          files=$(find packages -type f -path '*/coverage/lcov.info' -print | tr '\n' ' ')
          echo "files=$files" >> $GITHUB_OUTPUT

      - name: Upload coverage files to Codecov (per-package flags)
        run: |
          if [ -z "${{ steps.find_cov.outputs.files }}" ]; then
            echo "No coverage files found â€” skipping upload"
            exit 0
          fi

          for f in ${{ steps.find_cov.outputs.files }}; do
            # derive package name from path like packages/<pkg>/coverage/lcov.info
            pkg=$(echo "$f" | sed -E 's|^packages/([^/]+)/.*$|\1|')
            echo "Uploading $f with flag=$pkg"
            if [ -n "$CODECOV_TOKEN" ]; then
              # private repos: use token
              bash <(curl -s https://codecov.io/bash) -f "$f" -F "$pkg" -t "$CODECOV_TOKEN" || (echo "Codecov upload failed for $f" && exit 1)
            else
              # public repos: token optional
              bash <(curl -s https://codecov.io/bash) -f "$f" -F "$pkg" || (echo "Codecov upload failed for $f" && exit 1)
            fi
          done

      - name: Done
        run: echo "Coverage upload done."
