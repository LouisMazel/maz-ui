const Components = require('./components.js')
const fs = require('fs')
const render = require('json-templater/string')
const uppercamelcase = require('uppercamelcase')
const path = require('path')
const endOfLine = require('os').EOL

const OUTPUT_PATH = path.join(__dirname, '../src/lib.js')
const IMPORT_TEMPLATE = 'import {{name}} from \'.{{path}}\''
const INSTALL_COMPONENT_TEMPLATE = '  {{name}}'
const MAIN_TEMPLATE = `
/* Automatically generated by './build/build-entry.js (thanks element-ui)' */
/* eslint-disable */

{{include}}
import { version } from '../package.json'

const components = [
{{install}},
]

const install = (Vue, opts = {}) => {
  components.forEach(component => {
    Vue.component(component.name, component)
  })
}

if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue)
}

export default {
  version,
  install,
{{list}}
}

export {
  version,
  install
}
/* eslint-enable */
`

// delete Components.font

const ComponentsArray = Object.entries(Components)

const includeComponentTemplate = []
const installTemplate = []
const listTemplate = []

ComponentsArray.forEach((component) => {
  const name = component[0]
  const path = component[1]
  const componentName = uppercamelcase(name)

  includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
    name: componentName,
    package: name,
    path
  }))

  installTemplate.push(render(INSTALL_COMPONENT_TEMPLATE, {
    name: componentName,
    component: name,
    path
  }))

  listTemplate.push(`  ${componentName}`)
})

const template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(',' + endOfLine),
  version: process.env.VERSION || require('../package.json').version,
  list: listTemplate.join(',' + endOfLine)
})

fs.writeFileSync(OUTPUT_PATH, template)
console.log('\x1b[32m', '[build entry] DONE:', OUTPUT_PATH)
